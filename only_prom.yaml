grafana:
  enabled: false

nodeExporter:
  enabled: false

## Flag to disable all the kubernetes component scrapers
kubernetesServiceMonitors:
  enabled: false

kubeStateMetrics:       ## Component scraping kube state metrics
  enabled: false

# 기본 탑재된 Alert 대시보드가 prometheus에 저장된 alertmanager지표를 활용함. # false해도 무방.
# grafana 자체알람기능 사용시, alertmanager와 무관하게 prometheus의 일반 지표를 활용하는 것이 더 일반적
alertmanager:
  enabled: true

prometheus:
  service:
    type: LoadBalancer
  prometheusSpec:
    nodeSelector: {}
    retention: 7d
    additionalScrapeConfigs: # []
      # Prometheus-Proxy는 하나의 Exporter처럼 취급된다.
      # 여러 node exporter는 metrics_path(job)으로 구분된다.
      # 개별 인스턴스를 정확히 구분하고 싶은경우, exporter 하나 당 agent,proxy도 각각 구축 필요
      - job_name: app1_metrics
        metrics_path: "/app1_metrics"  # Agent에서 설정한 exporter
        static_configs:
          - targets:
            - localhost:8080            # Prometheus-Proxy
      # - job_name: app2_metrics
      #   metrics_path: "/app2_metrics"  # Agent에서 설정한 exporter
      #   static_configs:
      #     - targets:
      #       - localhost:9102           # Prometheus-Proxy -p 9102:8080
      # - job_name: app3_metrics
      #   metrics_path: "/app3_metrics"  # Agent에서 설정한 exporter
      #   static_configs:
      #     - targets:
      #       - localhost:9103           # Prometheus-Proxy -p 9103:8080

      
      # Prometheus가 exporter를 참조할 때 ServiceMonitor를 쓰지않고 수동연결하는 경우 설정
      # # 단일 클러스터, kafka-exporter
      # - job_name: kafka-metrics
      #   scrape_interval: 10s
      #   scrape_timeout:  5s
      #   metrics_path: "/metrics"  # exporter 설정에서 정해진대로 써준다.
      #   static_configs:
      #     - targets:
      #       - test-kafka-metrics.default.svc.cluster.local:9308
      # # 단일 클러스터, kafka-jmx
      # - job_name: kafka-jmx
      #   scrape_interval: 10s
      #   scrape_timeout:  5s
      #   metrics_path: "/"         # exporter 설정에서 정해진대로 써준다.
      #   static_configs:
      #     - targets:
      #       - test-kafka-jmx-metrics.default.svc.cluster.local:5556
  
  # ingress 대신 그냥 ExternalIP:Port로 접속권장. 개별 클러스터마다 URL과 ingress controller 관리하기 번거로움
  ingress:
    enabled: false
    # ingressClassName: traefik  # k3s default ingress controller
    annotations: {}
    labels: {}
    # servicePort: 8081
    hosts: # []
      - prometheus.test.wai
    paths: []
    # - /
    # pathType: ImplementationSpecific
    tls: []

prometheusOperator:
  enabled: true
  ## Service account for Prometheus Operator to use.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    create: true  # default: true
    name: ""      # default: ""
  nodeSelector: {}

